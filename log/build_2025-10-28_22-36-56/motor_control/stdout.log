-- The C compiler identification is GNU 13.3.0
-- The CXX compiler identification is GNU 13.3.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found ament_cmake: 2.5.4 (/opt/ros/jazzy/share/ament_cmake/cmake)
-- Found Python3: /usr/bin/python3 (found version "3.12.3") found components: Interpreter 
-- Found rclcpp: 28.1.12 (/opt/ros/jazzy/share/rclcpp/cmake)
-- Found rosidl_generator_c: 4.6.6 (/opt/ros/jazzy/share/rosidl_generator_c/cmake)
-- Found rosidl_generator_cpp: 4.6.6 (/opt/ros/jazzy/share/rosidl_generator_cpp/cmake)
-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
-- Found rmw_implementation_cmake: 7.3.2 (/opt/ros/jazzy/share/rmw_implementation_cmake/cmake)
-- Found rmw_fastrtps_cpp: 8.4.3 (/opt/ros/jazzy/share/rmw_fastrtps_cpp/cmake)
-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "3.0.13")  
-- Found FastRTPS: /opt/ros/jazzy/include (Required is at least version "2.13") 
-- Using RMW implementation 'rmw_fastrtps_cpp' as default
-- Found motor_messages: 0.0.0 (/workspaces/ANUBIS/install/motor_messages/share/motor_messages/cmake)
-- Found rclcpp_components: 28.1.12 (/opt/ros/jazzy/share/rclcpp_components/cmake)
-- Found ament_lint_auto: 0.17.3 (/opt/ros/jazzy/share/ament_lint_auto/cmake)
-- Added test 'cppcheck' to perform static code analysis on C / C++ code
-- Configured cppcheck include dirs: $<BUILD_INTERFACE:/workspaces/ANUBIS/anubis_ws/src/motor_control/include>
-- Configured cppcheck exclude dirs and/or files: 
-- Added test 'flake8' to check Python code syntax and style conventions
-- Configured 'flake8' exclude dirs and/or files: 
-- Added test 'lint_cmake' to check CMake code style
-- Added test 'pep257' to check Python code against some of the docstring style conventions in PEP 257
-- Added test 'uncrustify' to check C / C++ code style
-- Configured uncrustify additional arguments: 
-- Added test 'xmllint' to check XML markup files
-- Configuring done (2.3s)
-- Generating done (0.0s)
-- Build files have been written to: /workspaces/ANUBIS/build/motor_control
[ 37%] [32mBuilding CXX object CMakeFiles/sparkmax_control_node.dir/src/spark_base.cpp.o[0m
[ 37%] [32mBuilding CXX object CMakeFiles/sparkmax_control_node.dir/src/sparkmax_controller.cpp.o[0m
[ 37%] [32mBuilding CXX object CMakeFiles/sparkmax_control_node.dir/src/sparkmax_controller_executable.cpp.o[0m
[ 50%] [32mBuilding CXX object CMakeFiles/kraken_control_node.dir/src/kraken_controller_executable.cpp.o[0m
[ 62%] [32mBuilding CXX object CMakeFiles/kraken_control_node.dir/src/kraken_controller.cpp.o[0m
[ 75%] [32m[1mLinking CXX executable kraken_control_node[0m
[ 75%] Built target kraken_control_node
